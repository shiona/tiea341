concat (map f x:map (map f) xs) == map f x ++ concat (map (map f) xs)

{- 
  by definition of concat: 
    concat [] = []
    concat (x:xs) = x ++ concat xs

  this is immediately proven. 
  Just to make it clear:
    x  = map f x  
    xs = map (map f) xs 
-}

-----------------------------------------------

map f x ++ map f y == map f (x++y) 

{- 
  by definition of map: 
    map f []     = []
    map f (x:xs) = f x : map f xs
-}

-- if x = []
map f ([]++y)  =  map f y  =  [] ++ map f y  =  map f [] ++ map f y

-- otherwise
map f ((x:xs)++y) = f x : map f (xs ++ y)

-- by induction
map f(xs++y) = f x1 : f x2 : f x3 : ... : f xn : map f y
  where x1:x2:x3:...:xn:[] = xs

-- f x1 : ... : f xn : [] is of course  map f xs
-- getting us back to:

map f x ++ map f y 